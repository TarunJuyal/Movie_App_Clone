{"version":3,"sources":["images/Logo.png","components/config.js","actions/userActions.js","actions/types.js","hoc/auth.js","components/views/LandingPage/Sections/MainImage.js","components/views/LandingPage/Sections/GridCard.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/MovieDetailPage/Sections/Favourite.js","components/views/MovieDetailPage/MovieDetailPage.js","components/views/FavouritePage/FavouritePage.js","components/views/SearchResultPage/SearchResultPage.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/userReducer.js","index.js"],"names":["module","exports","API_KEY","API_URL","IMAGE_BASE_URL","dataToSubmit","a","axios","post","then","response","data","request","type","payload","auth","get","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","history","push","isAdmin","Title","Typography","MainImage","style","background","image","height","backgroundSize","backgroundPosition","width","position","maxWidth","bottom","marginLeft","color","level","title","fontSize","text","GridCards","actor","lg","md","xs","href","name","target","rel","alt","src","textAlign","fontWeight","to","movieId","LandingPage","useState","Movies","setMovies","CurrentPage","setCurrentPage","endpoint","fetchMovies","fetch","result","json","results","page","catch","error","console","margin","backdrop_path","original_title","overview","gutter","map","movie","index","Fragment","key","poster_path","GridCard","id","display","justifyContent","className","onClick","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","loginUser","loginSuccess","window","setItem","userId","removeItem","message","err","setTimeout","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","Item","prefix","Icon","placeholder","value","onChange","onBlur","border","padding","borderRadius","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","lastName","firstName","confirmPassword","oneOf","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","LeftMenu","userData","mode","searchHandler","e","searchValue","location","onPressEnter","suffix","SearchOutlined","logoutUser","NavBar","visible","setVisible","zIndex","Logo","marginTop","placement","closable","onClose","Footer","flexDirection","alignItems","Favourite","FavouriteNumber","setFavouriteNumber","Favourited","setFavourited","variable","userFrom","movieTitle","movieInfo","movieImage","movieRuntime","runtime","log","MovieDetailPage","Movie","setMovie","Cast","setCast","CastViewToggle","setCastViewToggle","match","params","cast","bordered","release_date","revenue","vote_average","vote_count","status","popularity","profile_path","variables","FavouritePage","FavouriteMovies","setFavouriteMovies","fetchFavourites","favourites","renderTableBody","content","handleRemove","SearchResultPage","searchMovies","setsearchMovies","movieName","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","RegisterPage","Boolean","hostname","rootReducer","combineReducers","action","register","logoutSuccess","createStoreWithMiddleware","applyMiddleware","promiseMiddleWare","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eaaee016.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.0e4c6b31.png\";","export const USER_SERVER = \"/api/users\";\r\nexport const API_KEY = \"0bf26a87f0f796bb8b34cd6e07418340\";\r\nexport const API_URL = \"https://api.themoviedb.org/3/\";\r\nexport const IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\r\nexport const BACKDROP_SIZE = \"w1280\";\r\nexport const IMAGE_SIZE = \"w128\";\r\nexport const POSTER_SIZE = \"w500\";\r\n","import axios from \"axios\";\r\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER } from \"./types\";\r\nimport { USER_SERVER } from \"../components/config\";\r\n\r\nexport async function loginUser(dataToSubmit) {\r\n  const request = await axios\r\n    .post(`${USER_SERVER}/login`, dataToSubmit)\r\n    .then((response) => response.data);\r\n  return {\r\n    type: LOGIN_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport async function registerUser(dataToSubmit) {\r\n  const request = await axios\r\n    .post(`${USER_SERVER}/register`, dataToSubmit)\r\n    .then((response) => response.data);\r\n  return {\r\n    type: REGISTER_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport async function auth() {\r\n  const request = await axios\r\n    .get(`${USER_SERVER}/auth`)\r\n    .then((response) => response.data);\r\n  return {\r\n    type: AUTH_USER,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport async function logoutUser() {\r\n  const request = await axios\r\n    .get(`${USER_SERVER}/logout`)\r\n    .then((response) => response.data);\r\n\r\n  return {\r\n    type: LOGOUT_USER,\r\n    payload: request,\r\n  };\r\n}\r\n","export const LOGIN_USER = \"login_user\";\r\nexport const REGISTER_USER = \"register_user\";\r\nexport const AUTH_USER = \"auth_user\";\r\nexport const LOGOUT_USER = \"logout_user\";\r\n","import React, { useEffect } from \"react\";\r\nimport { auth } from \"../actions/userActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n  function AuthenticationCheck(props) {\r\n    let user = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n      dispatch(auth()).then(async (response) => {\r\n        if (await !response.payload.isAuth) {\r\n          if (option) {\r\n            props.history.push(\"/login\");\r\n          }\r\n        } else {\r\n          if (adminRoute && !response.payload.isAdmin) {\r\n            props.history.push(\"/\");\r\n          } else {\r\n            if (option === false) {\r\n              props.history.push(\"/\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }, [dispatch, props.history]);\r\n\r\n    return <SpecificComponent {...props} user={user} />;\r\n  }\r\n  return AuthenticationCheck;\r\n}\r\n","import React from \"react\";\r\nimport { Typography } from \"antd\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction MainImage(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        background: `linear-gradient(to bottom, rgba(0,0,0,0)\r\n            39%,rgba(0,0,0,0)\r\n            41%,rgba(0,0,0,0.65)\r\n            100%),\r\n            url('${props.image}'), #1c1c1c`,\r\n        height: \"500px\",\r\n        backgroundSize: \"100%, cover\",\r\n        backgroundPosition: \"center, center\",\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <div>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            maxWidth: \"500px\",\r\n            bottom: \"2rem\",\r\n            marginLeft: \"2rem\",\r\n          }}\r\n        >\r\n          <Title style={{ color: \"white\" }} level={2}>\r\n            {\" \"}\r\n            {props.title}{\" \"}\r\n          </Title>\r\n          <p style={{ color: \"white\", fontSize: \"1rem\" }}>{props.text} </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainImage;\r\n","import React from \"react\";\r\nimport { Col } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction GridCards(props) {\r\n  if (props.actor) {\r\n    return (\r\n      <Col lg={6} md={8} xs={24}>\r\n        <div style={{ position: \"relative\" }}>\r\n          <a\r\n            href={`https://en.wikipedia.org/wiki/${props.name}`}\r\n            target={\"_blank\"}\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <img\r\n              style={{ width: \"100%\", height: \"320px\" }}\r\n              alt={props.name}\r\n              src={props.image}\r\n            />\r\n          </a>\r\n          <p\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"16px\",\r\n            }}\r\n          >\r\n            {props.name}\r\n          </p>\r\n        </div>\r\n      </Col>\r\n    );\r\n  } else {\r\n    return (\r\n      <Col lg={6} md={8} xs={24}>\r\n        <div style={{ position: \"relative\" }}>\r\n          <Link to={`/movie/${props.movieId}`}>\r\n            <img\r\n              style={{ width: \"100%\", height: \"320px\" }}\r\n              alt=\"img\"\r\n              src={props.image}\r\n            />\r\n          </Link>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridCards;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Typography, Row } from \"antd\";\r\nimport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  POSTER_SIZE,\r\n  BACKDROP_SIZE,\r\n} from \"../../config\";\r\nimport MainImage from \"./Sections/MainImage\";\r\nimport GridCard from \"./Sections/GridCard\";\r\nconst { Title } = Typography;\r\nfunction LandingPage() {\r\n  const [Movies, setMovies] = useState([]);\r\n  const [CurrentPage, setCurrentPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    fetchMovies(endpoint);\r\n  }, []);\r\n\r\n  const fetchMovies = (endpoint) => {\r\n    fetch(endpoint)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        setMovies([...Movies, ...result.results]);\r\n        setCurrentPage(result.page);\r\n      })\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  };\r\n\r\n  const loadMoreItems = () => {\r\n    let endpoint = \"\";\r\n    endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${\r\n      CurrentPage + 1\r\n    }`;\r\n    fetchMovies(endpoint);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", margin: \"0\" }}>\r\n      {Movies[0] && (\r\n        <MainImage\r\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${Movies[0].backdrop_path}`}\r\n          title={Movies[0].original_title}\r\n          text={Movies[0].overview}\r\n        />\r\n      )}\r\n\r\n      <div style={{ width: \"85%\", margin: \"1rem auto\" }}>\r\n        <Title level={2}> Movies by latest </Title>\r\n        <hr />\r\n        <Row gutter={[16, 16]}>\r\n          {Movies &&\r\n            Movies.map((movie, index) => (\r\n              <React.Fragment key={index}>\r\n                {movie.poster_path && (\r\n                  <GridCard\r\n                    image={`${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`}\r\n                    movieId={movie.id}\r\n                  />\r\n                )}\r\n              </React.Fragment>\r\n            ))}\r\n        </Row>\r\n\r\n        <br />\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <button className=\"loadMore\" onClick={loadMoreItems}>\r\n            Load More\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../actions/userActions\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Input, Button, Checkbox, Typography } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe);\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\")\r\n    ? localStorage.getItem(\"rememberMe\")\r\n    : \"\";\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(8, \"Password must be at least 8 characters\")\r\n          .required(\"Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        let dataToSubmit = {\r\n          email: values.email,\r\n          password: values.password,\r\n        };\r\n\r\n        dispatch(loginUser(dataToSubmit))\r\n          .then((response) => {\r\n            if (response.payload.loginSuccess) {\r\n              window.localStorage.setItem(\"userId\", response.payload.userId);\r\n              if (rememberMe === true) {\r\n                window.localStorage.setItem(\"rememberMe\", values.email);\r\n              } else {\r\n                localStorage.removeItem(\"rememberMe\");\r\n              }\r\n              props.history.push(\"/\");\r\n            } else {\r\n              setFormErrorMessage(response.payload.message);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            setFormErrorMessage(\"Check out your Account or Password again\");\r\n            setTimeout(() => {\r\n              setFormErrorMessage(\"\");\r\n            }, 3000);\r\n          });\r\n        setSubmitting(false);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: \"350px\" }}>\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label>\r\n                  <p\r\n                    style={{\r\n                      color: \"#ff0000bf\",\r\n                      fontSize: \"0.7rem\",\r\n                      border: \"1px solid\",\r\n                      padding: \"1rem\",\r\n                      borderRadius: \"10px\",\r\n                    }}\r\n                  >\r\n                    {formErrorMessage}\r\n                  </p>\r\n                </label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox\r\n                  id=\"rememberMe\"\r\n                  onChange={handleRememberMe}\r\n                  checked={rememberMe}\r\n                >\r\n                  Remember me\r\n                </Checkbox>\r\n                <a\r\n                  className=\"login-form-forgot\"\r\n                  href=\"/reset_user\"\r\n                  style={{ float: \"right\" }}\r\n                >\r\n                  forgot password\r\n                </a>\r\n                <div>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    style={{ minWidth: \"100%\" }}\r\n                    disabled={isSubmitting}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    Log in\r\n                  </Button>\r\n                </div>\r\n                Or <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { registerUser } from \"../../../actions/userActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        lastName: \"\",\r\n        firstName: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        firstName: Yup.string().required(\"First Name is required\"),\r\n        lastName: Yup.string().required(\"Last Name is required\"),\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(8, \"Password must be at least 8 characters\")\r\n          .required(\"Password is required\"),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n          .required(\"Confirm Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then((response) => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg);\r\n            }\r\n          });\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form\r\n              style={{ minWidth: \"375px\" }}\r\n              {...formItemLayout}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <Form.Item required label=\"Name\">\r\n                <Input\r\n                  id=\"firstName\"\r\n                  placeholder=\"Enter your First Name\"\r\n                  type=\"text\"\r\n                  value={values.firstName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.firstName && touched.firstName\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.firstName && touched.firstName && (\r\n                  <div className=\"input-feedback\">{errors.firstName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Last Name\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Email\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.email && touched.email ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Password\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.password && touched.password ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  type=\"primary\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(RegisterPage);\r\n","import React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction LeftMenu(props) {\r\n  const user = useSelector((state) => state.user);\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"mail\">\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  } else {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"mail\">\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"favourite\">\r\n          <Link to=\"/favourite\">Favourites</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeftMenu;\r\n","import React from \"react\";\r\nimport { Menu, Input } from \"antd\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutUser } from \"../../../../actions/userActions\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const logoutHandler = () => {\r\n    dispatch(logoutUser()).then((response) => {\r\n      if (response.payload.success) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert(\"Log Out Failed\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const searchHandler = (e) => {\r\n    let searchValue = e.target.value;\r\n    window.location.href = `/search/${searchValue}`;\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"searchBar\">\r\n          <Input\r\n            onPressEnter={searchHandler}\r\n            placeholder=\"Search Movie\"\r\n            suffix={<SearchOutlined />}\r\n          ></Input>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"mail\">\r\n          <Link to=\"/login\">Signin</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <Link to=\"/register\">Signup</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  } else {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"searchBar\">\r\n          <Input\r\n            onPressEnter={searchHandler}\r\n            placeholder=\"Search Movie\"\r\n            suffix={<SearchOutlined />}\r\n          ></Input>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"logout\">\r\n          <a onClick={logoutHandler}>Logout</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n","import React, { useState } from \"react\";\r\nimport LeftMenu from \"./Sections/LeftMenu\";\r\nimport RightMenu from \"./Sections/RightMenu\";\r\nimport { Drawer, Button } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport \"./Sections/Navbar.css\";\r\nimport Logo from \"../../../images/Logo.png\";\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"menu\"\r\n      style={{ position: \"fixed\", zIndex: 5, width: \"100%\" }}\r\n    >\r\n      <div className=\"menu__logo\">\r\n        <a href=\"/\">\r\n          <img\r\n            src={Logo}\r\n            alt=\"Logo\"\r\n            style={{ width: \"100%\", marginTop: \"-5px\" }}\r\n          />\r\n        </a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_left\">\r\n          <LeftMenu mode=\"horizontal\" />\r\n        </div>\r\n        <div className=\"menu_right\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"Basic Drawer\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <LeftMenu mode=\"inline\" />\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"80px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        fontSize: \"1rem\",\r\n      }}\r\n    >\r\n      <p>Footer</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction Favourite(props) {\r\n  const [FavouriteNumber, setFavouriteNumber] = useState(0);\r\n  const [Favourited, setFavourited] = useState(false);\r\n  const variable = {\r\n    userFrom: props.userFrom,\r\n    movieId: props.movieId,\r\n    movieTitle: props.movieInfo.original_title,\r\n    movieImage: props.movieInfo.backdrop_path,\r\n    movieRuntime: props.movieInfo.runtime,\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.post(\"/api/favourite/favouriteNumber\", variable).then((response) => {\r\n      if (response.data.success) {\r\n        setFavouriteNumber(response.data.FavouriteNumber);\r\n      } else {\r\n        console.log(\"Failed to get favourite number\");\r\n      }\r\n    });\r\n    axios.post(\"/api/favourite/favourited\", variable).then((response) => {\r\n      if (response.data.success) {\r\n        setFavourited(response.data.Favourited);\r\n      } else {\r\n        console.log(\"Failed to get favourite info\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleFavouriteClick = () => {\r\n    if (Favourited) {\r\n      axios\r\n        .post(\"/api/favourite/removeFromFavourite\", variable)\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            setFavouriteNumber(FavouriteNumber - 1);\r\n            setFavourited(!Favourited);\r\n          } else {\r\n            alert(\"Failed to remove from Favourites\");\r\n          }\r\n        });\r\n    } else {\r\n      axios.post(\"/api/favourite/addToFavourite\", variable).then((response) => {\r\n        if (response.data.success) {\r\n          setFavouriteNumber(FavouriteNumber + 1);\r\n          setFavourited(!Favourited);\r\n        } else {\r\n          alert(\"Login first to add to favourites\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleFavouriteClick}>\r\n        {Favourited ? \"Remove From Favourites\" : \"Add To Favourites\"}{\" \"}\r\n        {FavouriteNumber}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Favourite;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n} from \"../../config\";\r\nimport MainImage from \"../LandingPage/Sections/MainImage\";\r\nimport { Descriptions, Button, Row } from \"antd\";\r\nimport GridCard from \"../LandingPage/Sections/GridCard\";\r\nimport Favourite from \"./Sections/Favourite\";\r\n\r\nfunction MovieDetailPage(props) {\r\n  const [Movie, setMovie] = useState([]);\r\n  const [Cast, setCast] = useState([]);\r\n  const [CastViewToggle, setCastViewToggle] = useState(false);\r\n  const movieId = props.match.params.movieId;\r\n\r\n  useEffect(() => {\r\n    fetch(`${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setMovie(response);\r\n        fetch(`${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`)\r\n          .then((response) => response.json())\r\n          .then((response) => setCast(response.cast));\r\n      });\r\n  }, [movieId]);\r\n\r\n  const handleMovieCastToggle = () => {\r\n    setCastViewToggle(!CastViewToggle);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {Movie && (\r\n        <MainImage\r\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${Movie.backdrop_path}`}\r\n          title={Movie.original_title}\r\n          text={Movie.overview}\r\n        />\r\n      )}\r\n      <div style={{ width: \"85%\", margin: \"1rem auto\" }}>\r\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Favourite\r\n            userFrom={localStorage.getItem(\"userId\")}\r\n            movieId={movieId}\r\n            movieInfo={Movie}\r\n          />\r\n        </div>\r\n        <Descriptions title=\"Movie Info\" bordered>\r\n          <Descriptions.Item label=\"Title\">\r\n            {Movie.original_title}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Release Date\">\r\n            {Movie.release_date}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Revenue\">{Movie.revenue}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Runtime\">\r\n            {Movie.runtime} min\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Vote Average\" span={2}>\r\n            {Movie.vote_average}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Vote Count\">\r\n            {Movie.vote_count}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Status\">{Movie.status}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Popularity\">\r\n            {Movie.popularity}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <br />\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Button onClick={handleMovieCastToggle}>Movie Cast</Button>\r\n        </div>\r\n        <br />\r\n        {CastViewToggle && (\r\n          <Row gutter={[16, 16]}>\r\n            {Cast &&\r\n              Cast.map((cast, index) => (\r\n                <React.Fragment key={index}>\r\n                  {cast.profile_path && (\r\n                    <GridCard\r\n                      actor\r\n                      image={`${IMAGE_BASE_URL}${POSTER_SIZE}${cast.profile_path}`}\r\n                      name={cast.name}\r\n                    />\r\n                  )}\r\n                </React.Fragment>\r\n              ))}\r\n          </Row>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetailPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Typography, Popover } from \"antd\";\r\nimport \"./FavouritePage.css\";\r\nimport axios from \"axios\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\r\n\r\nconst { Title } = Typography;\r\nconst variables = { userFrom: localStorage.getItem(\"userId\") };\r\n\r\nfunction FavouritePage() {\r\n  const [FavouriteMovies, setFavouriteMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchFavourites();\r\n  }, []);\r\n\r\n  const fetchFavourites = () => {\r\n    axios\r\n      .post(\"/api/favourite/getFavouriteMovies\", variables)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setFavouriteMovies([...response.data.favourites]);\r\n        } else {\r\n          console.log(\"Failed to get favourites\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleRemove = (movieId) => {\r\n    const variable = {\r\n      movieId: movieId,\r\n      userFrom: localStorage.getItem(\"userId\"),\r\n    };\r\n    axios\r\n      .post(\"/api/favourite/removeFromFavourite\", variable)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          fetchFavourites();\r\n        } else {\r\n          alert(\"Failed to remove from Favourites\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const renderTableBody = FavouriteMovies.map((movie, index) => {\r\n    const content = (\r\n      <div>\r\n        {movie.movieImage && (\r\n          <img src={`${IMAGE_BASE_URL}${POSTER_SIZE}${movie.movieImage}`}></img>\r\n        )}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <tr key={index}>\r\n        <Popover content={content} title={`${movie.movieTitle}`}>\r\n          <td>{movie.movieTitle}</td>\r\n        </Popover>\r\n        <td>{movie.movieRuntime}</td>\r\n        <td>\r\n          <button onClick={() => handleRemove(movie.movieId)}>\r\n            Remove from favourites\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{ width: \"85%\", margin: \"3rem auto\" }}>\r\n      <Title level={2}> Your Favorite Movies </Title>\r\n      <hr />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Movie Title</th>\r\n            <th>Movie RunTime</th>\r\n            <th>Remove from favorites</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderTableBody}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavouritePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, API_KEY, API_URL } from \"../../config\";\r\nimport { Typography, Row } from \"antd\";\r\nimport GridCard from \"../LandingPage/Sections/GridCard\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction SearchResultPage(props) {\r\n  const [searchMovies, setsearchMovies] = useState([]);\r\n  const movieName = props.match.params.movieName;\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${movieName}&page=1&adult=false`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setsearchMovies(response.results);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: \"85%\", margin: \"1rem auto\" }}>\r\n      <Title level={2}> Search Results </Title>\r\n      <hr />\r\n      <Row gutter={[16, 16]}>\r\n        {searchMovies &&\r\n          searchMovies.map((movie, index) => (\r\n            <React.Fragment key={index}>\r\n              {movie.poster_path && (\r\n                <GridCard\r\n                  image={`${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`}\r\n                  movieId={movie.id}\r\n                />\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResultPage;\r\n","import React, { Suspense } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n\nimport LandingPage from \"./views/LandingPage/LandingPage\";\nimport LoginPage from \"./views/LoginPage/LoginPage\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\";\nimport MovieDetailPage from \"./views/MovieDetailPage/MovieDetailPage\";\nimport FavouritePage from \"./views/FavouritePage/FavouritePage\";\nimport SearchResultPage from \"./views/SearchResultPage/SearchResultPage\";\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading.... </div>}>\n      <NavBar />\n      <div style={{ paddingTop: \"69px\", minHeight: \"calc(100vh - 80px)\" }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)}></Route>\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)}></Route>\n          <Route\n            exact\n            path=\"/register\"\n            component={Auth(RegisterPage, false)}\n          ></Route>\n          <Route\n            exact\n            path=\"/movie/:movieId\"\n            component={Auth(MovieDetailPage, null)}\n          ></Route>\n          <Route\n            exact\n            path=\"/favourite\"\n            component={Auth(FavouritePage, null)}\n          ></Route>\n          <Route\n            exact\n            path=\"/search/:movieName\"\n            component={Auth(SearchResultPage, null)}\n          ></Route>\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\r\n\r\nimport user from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  LOGOUT_USER,\r\n  AUTH_USER,\r\n} from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      return { ...state, loginSuccess: action.payload };\r\n    case REGISTER_USER:\r\n      return { ...state, register: action.payload };\r\n    case AUTH_USER:\r\n      return { ...state, userData: action.payload };\r\n    case LOGOUT_USER:\r\n      return { ...state, logoutSuccess: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/ie11\";\nimport \"core-js\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promiseMiddleWare from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\nimport Reducer from \"./reducers/index\";\n\nconst createStoreWithMiddleware = applyMiddleware(\n  promiseMiddleWare,\n  ReduxThunk\n)(createStore);\n\nReactDOM.render(\n  <Provider\n    store={createStoreWithMiddleware(\n      Reducer,\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}\n  >\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}